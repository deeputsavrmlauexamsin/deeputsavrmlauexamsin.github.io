name: Update User via Dispatch

on:
  repository_dispatch:
    types: [update_user]

permissions:
  contents: write

jobs:
  handle-dispatch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install qrcode pillow

      - name: Process payload and commit
        env:
          GH_REPO: ${{ github.repository }}
        shell: bash
        run: |
          cat > run_update.py <<'PY'
import base64, csv, os, json, time
from pathlib import Path
from PIL import Image
import qrcode

payload = json.loads(os.environ["PAYLOAD"])

base = Path("Department/Print_Data")
photos = base/"photos"
qrs = base/"qr_codes"
csv_path = base/"data.csv"
for p in [base, photos, qrs]:
    p.mkdir(parents=True, exist_ok=True)

uid = str(int(time.time()))
slug = base64.b64encode(uid.encode()).decode()[:6]

photo_data = payload.get("photo_data_url","")
photo_filename = f"{uid}_photo.jpg"
if photo_data.startswith("data:"):
    _,b64 = photo_data.split(",",1)
    with open(photos/photo_filename,"wb") as f:
        f.write(base64.b64decode(b64))
else:
    photo_filename=""

qr_filename = f"{uid}_QR.png"
link = f"https://{os.environ.get('GH_REPO')}/Department/Print_Data/?ID={slug}"
qr=qrcode.QRCode(box_size=10,border=4)
qr.add_data(link)
qr.make(fit=True)
img=qr.make_image(fill_color="black",back_color="white")
img.save(qrs/qr_filename)

fields=["id","slug","name","phone","ghat","role","photo","college"]
data={
  "id":uid,
  "slug":slug,
  "name":payload.get("name",""),
  "phone":payload.get("phone",""),
  "ghat":f"राम की पैड़ी घाट नं : {payload.get('ghat','')}",
  "role":payload.get("role",""),
  "photo":photo_filename,
  "college":payload.get("college","")
}

rows=[]
if csv_path.exists():
    txt=csv_path.read_text(encoding="utf-8").strip()
    if txt:
        reader=csv.DictReader(txt.splitlines(),delimiter='\t')
        rows.extend(reader)
rows.append(data)

with open(csv_path,"w",encoding="utf-8",newline="") as f:
    w=csv.DictWriter(f,fieldnames=fields,delimiter='\t')
    w.writeheader(); w.writerows(rows)

os.system("git add -A")
os.system(f'git commit -m \"Add user {data['name']} id={uid}\" || true')
os.system("git push origin HEAD:main || true")
print("✅ Done:", uid)
PY

          python run_update.py
        env:
          PAYLOAD: ${{ toJson(github.event.client_payload) }}
